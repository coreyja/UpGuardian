[package]
name = "status"
version = "0.1.0"
edition = "2021"
license = "private"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
miette = { version = "5.7", features = ["fancy"], optional = true }

tokio = { version = "1.21", features = ["full"], optional = true }

tracing = { version = "0.1.37", optional = true }
tracing-opentelemetry = { version = "0.19.0", optional = true }
tracing-subscriber = { version = "0.3.16", features = [
  "env-filter",
], optional = true }
tracing-tree = { version = "0.2.2", optional = true }
opentelemetry = { version = "0.19.0", features = [
  "rt-tokio",
], default-features = false, optional = true }
opentelemetry-otlp = { version = "0.12.0", features = [
  "http-proto",
  "reqwest-rustls",
  "reqwest-client",
], default-features = false, optional = true }
sentry = { version = "0.31.5", default-features = false, features = [
  "rustls",
  "backtrace",
  "contexts",
  "panic",
  "tower",
  "reqwest",
], optional = true }
sentry-tower = { version = "0.31.5", features = ["http"], optional = true }
maud = { version = "0.25.0", features = [
], git = "https://github.com/lambda-fairy/maud", rev = "320add87a12d8e5be115de9e0fe3f4b331512a4a", optional = true }

serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

axum = { version = "0.7.4", optional = true }
axum-macros = { version = "0.4.0", optional = true }
async-trait = { version = "0.1.60" }

reqwest = { version = "0.11.22", features = [
  "json",
], default-features = false, optional = true }
jsonwebtoken = { version = "9.1.0", optional = true }
chrono = "0.4.31"

cja = { version = "0.0.0", git = "https://github.com/coreyja/coreyja.com", branch = "main", optional = true }
futures = "0.3.30"
sqlx = { version = "0.7.3", optional = true }
uuid = { version = "1.6.1", features = ["v4", "serde"] }
tower-cookies = { version = "0.10.0", features = [
  "private",
  "signed",
], optional = true }


console_error_panic_hook = "0.1"
leptos = { version = "0.6", features = ["nightly"] }
leptos_axum = { version = "0.6", optional = true }
leptos_meta = { version = "0.6", features = ["nightly"] }
leptos_router = { version = "0.6", features = ["nightly"] }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.5", features = ["fs"], optional = true }
wasm-bindgen = "=0.2.89"
thiserror = "1"
http = "1"
leptos_query = "0.4.2"


##### Leptos
[features]
hydrate = [
  "leptos/hydrate",
  "leptos_meta/hydrate",
  "leptos_router/hydrate",
  "leptos_query/hydrate",
]
ssr = [
  "dep:axum",
  "dep:tokio",
  "dep:tower",
  "dep:tower-http",
  "dep:leptos_axum",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
  "dep:tracing",
  "dep:miette",
  "dep:tracing-opentelemetry",
  "dep:tracing-subscriber",
  "dep:tracing-tree",
  "dep:opentelemetry",
  "dep:opentelemetry-otlp",
  "dep:sentry",
  "dep:sentry-tower",
  "dep:maud",
  "dep:axum-macros",
  "dep:sqlx",
  "dep:tower-cookies",
  "dep:reqwest",
  "reqwest/rustls-tls",
  "dep:jsonwebtoken",
  "dep:cja",
  "leptos_query/ssr",
]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "status-leptos"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/empty.css"
tailwind-input-file = "style/tailwind.css"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3001"

# The port to use for automatic reload monitoring
reload-port = 3011

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
